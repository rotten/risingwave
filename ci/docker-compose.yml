version: "3.9"
services:
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    ports:
      - 5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    command: [ "postgres", "-c", "wal_level=logical" ]

  mysql:
    image: mysql:8.0
    command: --character-set-server=utf8 --collation-server=utf8_general_ci
    ports:
      - 3306
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin ping -h 127.0.0.1 -u root -p123456"
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  message_queue:
    image: "docker.vectorized.io/vectorized/redpanda:latest"
    command:
      - redpanda
      - start
      - "--smp"
      - "1"
      - "--reserve-memory"
      - 0M
      - "--memory"
      - 4G
      - "--overprovisioned"
      - "--node-id"
      - "0"
      - "--check=false"
      - "--kafka-addr"
      - "PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092"
      - "--advertise-kafka-addr"
      - "PLAINTEXT://message_queue:29092,OUTSIDE://localhost:9092"
    expose:
      - "29092"
      - "9092"
      - "9644"
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9644:9644"
      - "8081:8081"
    environment: {}
    container_name: message_queue
    healthcheck:
      test: curl -f localhost:9644/v1/status/ready
      interval: 1s
      timeout: 5s
      retries: 5

  source-test-env:
    image: public.ecr.aws/x5u3w5h6/rw-build-env:v20230919
    depends_on:
      - mysql
      - db
      - message_queue
      - schemaregistry
    volumes:
      - ..:/risingwave

  sink-test-env:
    image: public.ecr.aws/x5u3w5h6/rw-build-env:v20230919
    depends_on:
      - mysql
      - db
      - elasticsearch
      - clickhouse-server
      - pulsar
    volumes:
      - ..:/risingwave

  rw-build-env:
    image: public.ecr.aws/x5u3w5h6/rw-build-env:v20230919
    volumes:
      - ..:/risingwave

  ci-flamegraph-env:
    image: public.ecr.aws/x5u3w5h6/rw-build-env:v20230919
    # NOTE(kwannoel): This is used in order to permit
    # syscalls for `nperf` (perf_event_open),
    # so it can do CPU profiling.
    # These options should NOT be used for other services.
    privileged: true
    userns_mode: host
    volumes:
      - ..:/risingwave

  regress-test-env:
    image: public.ecr.aws/x5u3w5h6/rw-build-env:v20230919
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ..:/risingwave

  release-env:
    image: quay.io/pypa/manylinux2014_x86_64
    working_dir: /mnt
    volumes:
      - ..:/mnt

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
    environment:
      - xpack.security.enabled=true
      - discovery.type=single-node
      - ELASTIC_PASSWORD=risingwave
    ports:
      - 9200:9200

  clickhouse-server:
    image: clickhouse/clickhouse-server:23.3.8.21-alpine
    container_name: clickhouse-server-1
    hostname: clickhouse-server-1
    ports:
      - "8123:8123"
      - "9000:9000"
      - "9004:9004"
    expose:
      - 9009

# Temporary workaround for json schema registry test since redpanda only supports
# protobuf/avro schema registry. Should be removed after the support.
# Related tracking issue:
# https://github.com/redpanda-data/redpanda/issues/1878
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  schemaregistry:
    container_name: schemaregistry
    hostname: schemaregistry
    image: confluentinc/cp-schema-registry:latest
    depends_on:
      - kafka
    ports:
      - "8082:8082"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_LISTENERS: http://schemaregistry:8082
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9093,PLAINTEXT_INTERNAL://localhost:29093
      SCHEMA_REGISTRY_DEBUG: 'true'

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    ports:
      - "29093:29093"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093,PLAINTEXT_INTERNAL://localhost:29093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  pulsar:
    container_name: pulsar
    image: apachepulsar/pulsar:latest
    command: bin/pulsar standalone
    ports:
      - "6650:6650"
      - "6651:8080"
    expose:
      - "8080"
      - "6650"
    healthcheck:
      test: [ "CMD-SHELL", "bin/pulsar-admin brokers healthcheck"]
      interval: 5s
      timeout: 5s
      retries: 5
