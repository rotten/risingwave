[workspace]
members = [
  "scripts/source/prepare_ci_pubsub",
  "src/batch",
  "src/bench",
  "src/cmd",
  "src/cmd_all",
  "src/common",
  "src/common/common_service",
  "src/compute",
  "src/connector",
  "src/ctl",
  "src/expr/core",
  "src/expr/impl",
  "src/expr/macro",
  "src/frontend",
  "src/frontend/planner_test",
  "src/java_binding",
  "src/jni_core",
  "src/meta",
  "src/meta/src/model_v2/migration",
  "src/object_store",
  "src/prost",
  "src/prost/helpers",
  "src/risedevtool",
  "src/risedevtool/config",
  "src/rpc_client",
  "src/source",
  "src/sqlparser",
  "src/sqlparser/test_runner",
  "src/storage",
  "src/storage/backup",
  "src/storage/compactor",
  "src/storage/hummock_sdk",
  "src/storage/hummock_test",
  "src/stream",
  "src/test_runner",
  "src/tests/compaction_test",
  "src/tests/e2e_extended_mode",
  "src/tests/regress",
  "src/tests/simulation",
  "src/tests/sqlsmith",
  "src/tests/state_cleaning_test",
  "src/udf",
  "src/utils/local_stats_alloc",
  "src/utils/pgwire",
  "src/utils/runtime",
  "src/utils/sync-point",
  "src/utils/variables",
  "src/utils/workspace-config",
  "src/workspace-hack",
]
resolver = "2"

[workspace.package]
version = "1.3.0-alpha"
edition = "2021"
homepage = "https://github.com/risingwavelabs/risingwave"
keywords = ["sql", "database", "streaming"]
license = "Apache-2.0"
repository = "https://github.com/risingwavelabs/risingwave"

[workspace.dependencies]
await-tree = "0.1.1"
aws-config = { version = "0.55", default-features = false, features = [
  "rt-tokio",
  "native-tls",
] }
aws-credential-types = { version = "0.55", default-features = false, features = [
  "hardcoded-credentials",
] }
aws-sdk-kinesis = { version = "0.28", default-features = false, features = [
  "rt-tokio",
  "native-tls",
] }
aws-sdk-s3 = { version = "0.28", default-features = false, features = [
  "rt-tokio",
  "native-tls",
] }
aws-sdk-ec2 = { version = "0.28", default-features = false, features = [
  "rt-tokio",
  "native-tls",
] }
aws-sdk-sqs = { version = "0.28", default-features = false, features = [
  "rt-tokio",
  "native-tls",
] }
aws-smithy-client = { version = "0.55", default-features = false, features = [
  "rt-tokio",
  "native-tls",
] }
aws-smithy-http = "0.55"
aws-smithy-types = "0.55"
aws-endpoint = "0.55"
aws-types = "0.55"
etcd-client = { package = "madsim-etcd-client", version = "0.3" }
futures-async-stream = "0.2"
hytra = "0.1"
rdkafka = { package = "madsim-rdkafka", git = "https://github.com/madsim-rs/madsim.git", rev = "fedb1e3", features = [
  "cmake-build",
] }
hashbrown = { version = "0.14.0", features = [
  "ahash",
  "inline-more",
  "nightly",
] }
criterion = { version = "0.5", features = ["async_futures"] }
tonic = { package = "madsim-tonic", version = "0.3.1" }
tonic-build = { package = "madsim-tonic-build", version = "0.3.1" }
icelake = { git = "https://github.com/icelake-io/icelake", rev = "72a65aed6ed7b3d529b311031c2c8d99650990e2" }
arrow-array = "46"
arrow-cast = "46"
arrow-schema = "46"
arrow-buffer = "46"
arrow-flight = "46"
arrow-select = "46"
arrow-ord = "46"
tikv-jemallocator = { git = "https://github.com/risingwavelabs/jemallocator.git", features = [
  "profiling",
  "stats",
], rev = "64a2d9" }

risingwave_backup = { path = "./src/storage/backup" }
risingwave_batch = { path = "./src/batch" }
risingwave_cmd = { path = "./src/cmd" }
risingwave_common = { path = "./src/common" }
risingwave_common_service = { path = "./src/common/common_service" }
risingwave_compactor = { path = "./src/storage/compactor" }
risingwave_compute = { path = "./src/compute" }
risingwave_ctl = { path = "./src/ctl" }
risingwave_connector = { path = "./src/connector" }
risingwave_expr = { path = "./src/expr/core" }
risingwave_expr_impl = { path = "./src/expr/impl" }
risingwave_frontend = { path = "./src/frontend" }
risingwave_hummock_sdk = { path = "./src/storage/hummock_sdk" }
risingwave_hummock_test = { path = "./src/storage/hummock_test" }
risingwave_hummock_trace = { path = "./src/storage/hummock_trace" }
risingwave_meta = { path = "./src/meta" }
risingwave_object_store = { path = "./src/object_store" }
risingwave_pb = { path = "./src/prost" }
risingwave_rpc_client = { path = "./src/rpc_client" }
risingwave_rt = { path = "./src/utils/runtime" }
risingwave_source = { path = "./src/source" }
risingwave_sqlparser = { path = "./src/sqlparser" }
risingwave_sqlsmith = { path = "./src/tests/sqlsmith" }
risingwave_storage = { path = "./src/storage" }
risingwave_stream = { path = "./src/stream" }
risingwave_test_runner = { path = "./src/test_runner" }
risingwave_udf = { path = "./src/udf" }
risingwave_variables = { path = "./src/utils/variables" }
risingwave_java_binding = { path = "./src/java_binding" }
risingwave_jni_core = { path = "src/jni_core" }

[workspace.lints.rust]
# `forbid` will also prevent the misuse of `#[allow(unused)]`
unused_must_use = "forbid"
future_incompatible = "warn"
nonstandard_style = "warn"
rust_2018_idioms = "warn"

[workspace.lints.clippy]
uninlined_format_args = "allow"
dbg_macro = "warn"
disallowed_methods = "warn"
disallowed_types = "warn"
doc_markdown = "warn"
explicit_into_iter_loop = "warn"
explicit_iter_loop = "warn"
inconsistent_struct_constructor = "warn"
unused_async = "warn"
map_flatten = "warn"
no_effect_underscore_binding = "warn"
await_holding_lock = "warn"

[workspace.lints.rustdoc]
private_intra_doc_links = "allow"
# Explicit lints don't hurt, and sometimes rust-analyzer works better with explicit links.
redundant_explicit_links = "allow"

[profile.dev]
lto = 'off'

[profile.release]
debug = "full"
split-debuginfo = "packed"
lto = "thin"

# The profile used for CI in main branch.
# This profile inherits from the release profile, but turns on some checks and assertions for us to
# better catch bugs in CI.
[profile.ci-release]
inherits = "release"
incremental = false
debug = "line-tables-only"
split-debuginfo = "off"
debug-assertions = true
overflow-checks = true

# The profile used for CI in pull requests.
# External dependencies are built with optimization enabled, while crates in this workspace are built
# with `dev` profile and full debug info. This is a trade-off between build time and e2e test time.
[profile.ci-dev]
inherits = "dev"
incremental = false
debug = "line-tables-only"
[profile.ci-dev.package."*"] # external dependencies
opt-level = 1
[profile.ci-dev.package."tokio"]
opt-level = 3
[profile.ci-dev.package."await-tree"]
opt-level = 3
[profile.ci-dev.package."indextree"]
opt-level = 3

# The profile used for deterministic simulation tests in CI.
# The simulator can only run single-threaded, so optimization is required to make the running time
# reasonable. The optimization level is customized to speed up the build.
[profile.ci-sim]
inherits = "dev"
opt-level = 2
incremental = false
debug = 1

# Patch third-party crates for deterministic simulation.
[patch.crates-io]
quanta = { git = "https://github.com/madsim-rs/quanta.git", rev = "948bdc3" }
getrandom = { git = "https://github.com/madsim-rs/getrandom.git", rev = "8daf97e" }
tokio-stream = { git = "https://github.com/madsim-rs/tokio.git", rev = "fe39bb8e" }
tokio-retry = { git = "https://github.com/madsim-rs/rust-tokio-retry.git", rev = "95e2fd3" }
tokio-postgres = { git = "https://github.com/madsim-rs/rust-postgres.git", rev = "ac00d88" }
# patch: unlimit 4MB message size for grpc client
etcd-client = { git = "https://github.com/risingwavelabs/etcd-client.git", rev = "d55550a" }
